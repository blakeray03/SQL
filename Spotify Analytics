--For this project, I downloaded Spotify data from Kaggle.

--Then I created a table to insert Spotify data into.

--Finally, I performed analytics on the data using SQL. 

--Creating the table: 

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL)

--Then I inserted the Spotify Data .csv into the table.

--Next, I explored the data using the following SQL.
SELECT *
FROM BIT_DB.Spotifydata
LIMIT 40;

--Which three artists had the most songs in the top 50?
SELECT artist_name, COUNT(track_name) Top_50_Tracks
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY Top_50_Tracks DESC
LIMIT 3;

--What is the average popularity, liveness, and tempo by artist and track name?
SELECT artist_name, track_name, AVG(popularity), AVG(liveness), AVG(tempo)
FROM BIT_DB.Spotifydata
GROUP BY artist_name, track_name;

--What is the maximum length, minimum length, and average length of songs for artists that have multiple songs in the top 50?
SELECT artist_name, count(track_name) as Top_50_Songs, MAX(duration_ms), MIN(duration_ms), AVG (duration_ms)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
HAVING Top_50_Songs > 1
ORDER BY Top_50_Songs desc;

--Which track in the top 50 has the highest average combination of speechiness and acousticness, and where does it fall in the top 50?
SELECT id, artist_name, track_name, avg(speechiness*acousticness)
FROM BIT_DB.Spotifydata
ORDER BY avg(speechiness*acousticness) DESC
LIMIT 1;
